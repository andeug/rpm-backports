From ebfb3fda98c7a6d5c2c471dd05d1131e37b26465 Mon Sep 17 00:00:00 2001
From: Roman Gushchin <guro@fb.com>
Date: Thu, 23 Aug 2018 17:29:35 -0700
Subject: [PATCH 4/4] core: add debug for cgroup bpf ops

---
 src/basic/bpf-program.c | 20 ++++++++++++++++++--
 1 file changed, 18 insertions(+), 2 deletions(-)

diff --git a/src/basic/bpf-program.c b/src/basic/bpf-program.c
index ed57f9ffd..cd9eb8c96 100644
--- a/src/basic/bpf-program.c
+++ b/src/basic/bpf-program.c
@@ -109,7 +109,7 @@ int bpf_program_load_kernel(BPFProgram *p, char *log_buf, size_t log_size) {
         return 0;
 }
 
-int bpf_program_cgroup_attach(BPFProgram *p, int type, const char *path, uint32_t flags) {
+static int __bpf_program_cgroup_attach(BPFProgram *p, int type, const char *path, uint32_t flags) {
         _cleanup_free_ char *copy = NULL;
         _cleanup_close_ int fd = -1;
         union bpf_attr attr;
@@ -172,7 +172,13 @@ int bpf_program_cgroup_attach(BPFProgram *p, int type, const char *path, uint32_
         return 0;
 }
 
-int bpf_program_cgroup_detach(BPFProgram *p) {
+int bpf_program_cgroup_attach(BPFProgram *p, int type, const char *path, uint32_t flags) {
+        int ret = __bpf_program_cgroup_attach(p, type, path, flags);
+        log_info("@@@: attach %p (%d) to %s: %d", p, p->prog_type, path, ret);
+        return ret;
+}
+
+static int __bpf_program_cgroup_detach(BPFProgram *p) {
         _cleanup_close_ int fd = -1;
 
         assert(p);
@@ -206,6 +212,16 @@ int bpf_program_cgroup_detach(BPFProgram *p) {
         return 0;
 }
 
+int bpf_program_cgroup_detach(BPFProgram *p) {
+        int ret;
+
+        log_info("@@@: detach %p (%d) from %s", p, p->prog_type, p->attached_path);
+        ret = __bpf_program_cgroup_detach(p);
+        log_info("@@@: => %d", ret);
+
+        return ret;
+}
+
 int bpf_map_new(enum bpf_map_type type, size_t key_size, size_t value_size, size_t max_entries, uint32_t flags) {
         union bpf_attr attr = {
                 .map_type = type,
-- 
2.17.1

